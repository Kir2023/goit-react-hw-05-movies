{"version":3,"file":"static/js/700.3643e61b.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieItem/MovieItem.module.css?431a","components/MovieItem/MovieItem.jsx","webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://react-homework-template/./src/components/SearchMovie/SearchMovie.module.css?c852","components/SearchMovie/SearchMovie.jsx","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx","services/MoviesServices.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieItem\":\"MovieItem_movieItem__+5IiU\",\"poster\":\"MovieItem_poster__2QxTy\",\"movieLink\":\"MovieItem_movieLink__6fTV-\"};","import { NavLink, useLocation } from 'react-router-dom';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './MovieItem.module.css';\n\nexport const MovieItem = ({ id, poster_path, title }) => {\n  const location = useLocation();\n\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  return (\n    <li className={css.movieItem} key={id}>\n      <NavLink\n        className={css.movieLink}\n        to={`/movies/${id}}`}\n        state={{ from: location }}\n      >\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500${poster_path}`\n              : defaultImg\n          }\n          alt={title}\n          width=\"190px\"\n          className={css.poster}\n        />\n        <p>{title}</p>\n      </NavLink>\n    </li>\n  );\n};\n\nMovieItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  poster_path: PropTypes.string,\n  title: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MovieList_movieList__uFrOZ\"};","import { MovieItem } from 'components/MovieItem/MovieItem';\nimport PropTypes from 'prop-types';\nimport css from './MovieList.module.css';\n\nexport const MoviesList = ({ films }) => {\n  return (\n    <ul className={css.movieList}>\n      {films.map(({ id, title, poster_path }) => (\n        <MovieItem key={id} id={id} title={title} poster_path={poster_path} />\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ).isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"SearchMovie_searchForm__unPlp\",\"searchButton\":\"SearchMovie_searchButton__idonF\",\"searchButtonLabel\":\"SearchMovie_searchButtonLabel__3qO3L\",\"searchFormInput\":\"SearchMovie_searchFormInput__QVP8q\"};","import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport css from './SearchMovie.module.css';\nimport { useSearchParams } from 'react-router-dom';\n\nexport const SearchMovie = ({ onSubmit }) => {\n  const [value, setValue] = useState('');\n  const [searchText, setSearchText] = useState('');\n  // eslint-disable-next-line\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const movieName = searchParams.get('query') || '';\n\n  useEffect(() => {\n    setSearchText(value);\n  }, [value]);\n\n  const handleQuery = e => {\n    setValue(e.target.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (searchText.trim() === '') {\n      alert('Please enter the name of serching film');\n      return;\n    }\n    if (movieName === value) {\n      alert(`You are already viewing the movies on query ${searchText}`);\n      setValue('');\n      return;\n    }\n    setSearchText(searchText.trim());\n    onSubmit(searchText.trim());\n    setValue('');\n  };\n\n  return (\n    <form className={css.searchForm} onSubmit={handleSubmit}>\n      <button type=\"submit\" className={css.searchButton}>\n        <span className={css.searchButtonLabel}>Search</span>\n      </button>\n\n      <input\n        className={css.searchFormInput}\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        onChange={handleQuery}\n        value={value}\n      />\n    </form>\n  );\n};\n\nSearchMovie.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"movies\":\"Movies_movies__TE99a\",\"header\":\"Movies_header__zzSuk\"};","import React, { useEffect, useState } from 'react';\nimport { Loader } from 'components/Loader/Loader';\nimport { MoviesList } from 'components/MovieList/MovieList';\nimport { SearchMovie } from 'components/SearchMovie/SearchMovie';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMovie } from 'services/MoviesServices';\nimport css from './Movies.module.css';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const movieName = searchParams.get('query') || '';\n\n  const updateQuery = query => {\n    const movieValue = query !== '' && { query };\n    setSearchParams(movieValue);\n  };\n\n  useEffect(() => {\n    const search = async () => {\n      try {\n        setIsLoading(true);\n        const films = await searchMovie(movieName);\n\n        setMovies(films);\n      } catch (err) {\n        alert('Sorry, something goes wrong');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    search();\n  }, [movieName]);\n\n  return (\n    <div className={css.movies}>\n      <SearchMovie value={movieName} onSubmit={updateQuery} />\n      {isLoading ? (\n        <Loader />\n      ) : movies.length === 0 && movieName ? (\n        <h2 className={css.header}>Nothing found</h2>\n      ) : (\n        <MoviesList films={movies} />\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '0f708fe56e4c6c703a9a5ec495c3a94d';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n  },\n};\n\nexport const fetchPopularMovies = async () => {\n  const response = await axios.get(`/movie/popular`, params);\n  return response.data.results;\n};\n\nexport const searchMovie = async movieName => {\n  const response = await axios.get(`/search/movie?query=${movieName}`, params);\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movie_id => {\n  const response = await axios.get(`/movie/${movie_id}`, params);\n  return response.data;\n};\n\nexport const fetchCast = async movie_id => {\n  const response = await axios.get(`/movie/${movie_id}/credits?`, params);\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movie_id => {\n  const response = await axios.get(`/movie/${movie_id}/reviews?`, params);\n  return response.data.results;\n};\n"],"names":["MovieItem","_ref","id","poster_path","title","location","useLocation","_jsx","className","css","children","_jsxs","NavLink","to","concat","state","from","src","alt","width","MoviesList","films","map","_ref2","SearchMovie","onSubmit","_useState","useState","_useState2","_slicedToArray","value","setValue","_useState3","_useState4","searchText","setSearchText","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","movieName","get","useEffect","e","preventDefault","trim","alert","type","autoComplete","autoFocus","placeholder","onChange","target","toLowerCase","movies","setMovies","setSearchParams","isLoading","setIsLoading","search","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","searchMovie","sent","t0","finish","stop","apply","arguments","query","Loader","length","axios","params","api_key","fetchPopularMovies","response","abrupt","data","results","_callee2","_context2","_x","fetchMovieDetails","_ref3","_callee3","movie_id","_context3","_x2","fetchCast","_ref4","_callee4","_context4","cast","_x3","fetchReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}